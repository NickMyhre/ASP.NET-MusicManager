@model MusicManager.ViewModels.Album.AlbumDetailsDto

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<hr />
<h1 class="justify-content-end ms-3 display-3">@Html.DisplayFor(model => model.Title)</h1>
<hr />
<div>
    <dl class="row border-bottom m-2 mb-4">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Artists)
        </dt>
        <dd class="col-sm-10">
            @Model.Artists.Select(x => x.BirthName).ToList().Aggregate((i, j) => i + " " + j)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Label)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Label)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Genre)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Genre)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ReleaseDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Fact)
        </dt>
        <dd class="col-sm-10 ">
            @Html.DisplayFor(model => model.Fact)
        </dd>
    </dl>
</div>
<div class="m-2">
    <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-outline-light">Edit</a>
    <a asp-action="Index" class="btn btn-outline-light">Albums</a>
</div>
@await Html.PartialAsync("../Shared/_AlbumSongTable.cshtml", Model.Songs, new ViewDataDictionary(ViewData){{"ParentId", Model.Id}})
